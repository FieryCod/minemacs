name: CI MacOS

on:
  push:
  pull_request:
  workflow_dispatch:
  # Run weekly
  schedule:
    - cron: "0 0 * * 0"

jobs:
  ci-macos:
    runs-on: "${{ matrix.architecture }}"
    strategy:
      fail-fast: false
      matrix:
        architecture:
          - macos-latest
          - macos-latest-xlarge # M1
    steps:
      - uses: actions/checkout@v4
      - name: Setup Emacs (MacOS)
        run: |
          brew install emacs
      - name: Show Emacs version
        run: |
          EMACS_VERSION=$(emacs --version)
          echo $EMACS_VERSION
          echo "EMACS_VERSION=$(echo $EMACS_VERSION | head -n1 | sed -E 's/GNU Emacs ([^ ]*).*/\1/')" >> "$GITHUB_ENV"
      - name: Running Emacs
        run: |
          ln -s "$(pwd)" "../.emacs.d"
          echo "Enabling all MinEmacs modules"
          echo "Running Emacs with MinEmacs configuration"
          MINEMACSDIR=.github/workflows/scripts/minemacs-all.d/
          make ci | tee /tmp/minemacs-output
          EMACS_EXIT_CODE=$?
          if [[ -z "$EMACS_EXIT_CODE" ]]; then
            echo "Emacs exited successfully"
          else
            echo "Emacs exited with non-zero code ${EMACS_EXIT_CODE}"
          fi
          WARNINGS=$(cat /tmp/minemacs-output | grep Warning | sed -E 's/^(.*\.el): Warning/- \*\*\1\*\*/' | sed -E 's/^Warning ([^:]*)/- \*\*\1\*\*/')
          LOAD_ERRORS=$(cat /tmp/minemacs-output | grep -E "(Cannot (open )?load)|(Not found)" | sed 's/^/- /')
          ELISP_ERRORS=$(cat /tmp/minemacs-output | awk -F': ' '/^Debugger entered--Lisp error: / { print "- **" $1 "**: `" $2 "`"; print "```elisp"; while (getline && match($0, "^[[:space:]]{2}")) print $0; print "```"}' )
          echo -e "# MinEmacs report ($EMACS_VERSION)\n" >> $GITHUB_STEP_SUMMARY
          if [[ ! -z "$LOAD_ERRORS" ]]; then
            echo -e "## Loading errors\n$LOAD_ERRORS\n" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ ! -z "$ELISP_ERRORS" ]]; then
            echo -e "## Emacs Lisp errors\n$ELISP_ERRORS\n" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ ! -z "$WARNINGS" ]]; then
            echo -e "## Warnings\n$WARNINGS" >> $GITHUB_STEP_SUMMARY
          fi
          if [[ ! -z "$LOAD_ERRORS" ]] || [[ ! -z "$ELISP_ERRORS" ]] || [[ ! -z "$EMACS_EXIT_CODE" ]]; then exit 1; fi
